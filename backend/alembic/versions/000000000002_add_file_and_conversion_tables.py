"""Add File and Conversion tables

Revision ID: 000000000002
Revises: 000000000001
Create Date: 2025-04-15 07:10:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '000000000002'
down_revision: Union[str, None] = '000000000001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('storage_path', sa.String(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('storage_path')
    )
    op.create_index(op.f('ix_files_original_filename'), 'files', ['original_filename'], unique=False)
    op.create_table('conversions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('original_file_id', sa.UUID(), nullable=False),
    sa.Column('output_format', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='conversion_status_enum', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('converted_file_path', sa.String(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['original_file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversions_status'), 'conversions', ['status'], unique=False)
    op.create_index(op.f('ix_conversions_task_id'), 'conversions', ['task_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_conversions_task_id'), table_name='conversions')
    op.drop_index(op.f('ix_conversions_status'), table_name='conversions')
    op.drop_table('conversions')
    op.drop_index(op.f('ix_files_original_filename'), table_name='files')
    op.drop_table('files')
    # Manually drop the ENUM type if it exists (specific to PostgreSQL)
    sa.Enum(name='conversion_status_enum').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ### 